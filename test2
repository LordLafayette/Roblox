-- ReplicatedStorage lister with collapsible folders, always visible on play screen

local player = game.Players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")

local listGui = Instance.new("ScreenGui")
listGui.Name = "ReplicatedStorageLister"
listGui.Parent = playerGui

local listFrame = Instance.new("Frame")
listFrame.Parent = listGui
listFrame.Size = UDim2.new(0.3, 0, 0.5, 0)
listFrame.Position = UDim2.new(0.65, 0, 0.25, 0)
listFrame.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
listFrame.BorderSizePixel = 0
listFrame.Active = true
listFrame.Draggable = true

local title = Instance.new("TextLabel")
title.Parent = listFrame
title.Size = UDim2.new(1, 0, 0.1, 0)
title.BackgroundTransparency = 1
title.Text = "ReplicatedStorage Items"
title.Font = Enum.Font.SourceSansBold
title.TextSize = 22
title.TextColor3 = Color3.new(1, 1, 1)

local scroll = Instance.new("ScrollingFrame")
scroll.Parent = listFrame
scroll.Size = UDim2.new(1, -8, 0.85, -8)
scroll.Position = UDim2.new(0, 4, 0.12, 4)
scroll.BackgroundTransparency = 1
scroll.CanvasSize = UDim2.new(0, 0, 0, 0)
scroll.ScrollBarThickness = 8
scroll.BorderSizePixel = 0

local layout = Instance.new("UIListLayout")
layout.Parent = scroll
layout.SortOrder = Enum.SortOrder.LayoutOrder
layout.Padding = UDim.new(0, 2)

-- Store collapse state for each folder
local collapseState = {}

-- Helper to create a label or folder row
local function createRow(parent, text, indent, isFolder, collapsed, onCollapse)
    local row = Instance.new("Frame")
    row.Parent = parent
    row.Size = UDim2.new(1, 0, 0, 24)
    row.BackgroundTransparency = 1

    if isFolder then
        local collapseBtn = Instance.new("TextButton")
        collapseBtn.Parent = row
        collapseBtn.Size = UDim2.new(0, 24, 1, 0)
        collapseBtn.Position = UDim2.new(0, indent * 20, 0, 0)
        collapseBtn.BackgroundTransparency = 1
        collapseBtn.Text = collapsed and "[+]" or "[-]"
        collapseBtn.Font = Enum.Font.SourceSansBold
        collapseBtn.TextSize = 18
        collapseBtn.TextColor3 = Color3.fromRGB(255, 255, 127)
        collapseBtn.AutoButtonColor = false
        collapseBtn.MouseButton1Click:Connect(function()
            onCollapse()
        end)

        local label = Instance.new("TextLabel")
        label.Parent = row
        label.Size = UDim2.new(1, -24 - indent * 20, 1, 0)
        label.Position = UDim2.new(0, 24 + indent * 20, 0, 0)
        label.BackgroundTransparency = 1
        label.Text = text
        label.Font = Enum.Font.SourceSans
        label.TextSize = 18
        label.TextColor3 = Color3.new(1, 1, 1)
        label.TextXAlignment = Enum.TextXAlignment.Left
    else
        local label = Instance.new("TextLabel")
        label.Parent = row
        label.Size = UDim2.new(1, -indent * 20, 1, 0)
        label.Position = UDim2.new(0, indent * 20, 0, 0)
        label.BackgroundTransparency = 1
        label.Text = text
        label.Font = Enum.Font.SourceSans
        label.TextSize = 18
        label.TextColor3 = Color3.new(1, 1, 1)
        label.TextXAlignment = Enum.TextXAlignment.Left
    end
    return row
end

function listItems()
    -- Clear previous
    for _, child in ipairs(scroll:GetChildren()) do
        if child:IsA("Frame") then
            child:Destroy()
        end
    end

    for _, item in ipairs(game.ReplicatedStorage:GetChildren()) do
        if item.ClassName == "Folder" or item.ClassName == "Model" then
            -- Default collapsed unless already set
            if collapseState[item] == nil then
                collapseState[item] = true
            end
            local collapsed = collapseState[item]
            createRow(scroll, item.Name .. " (" .. item.ClassName .. ")", 0, true, collapsed, function()
                collapseState[item] = not collapsed
                listItems()
            end)
            if not collapsed then
                listFolderItems(item, 1)
            end
        else
            createRow(scroll, item.Name .. " (" .. item.ClassName .. ")", 0, false)
        end
    end

    -- Update canvas size
    local count = 0
    for _, child in ipairs(scroll:GetChildren()) do
        if child:IsA("Frame") then
            count = count + 1
        end
    end
    scroll.CanvasSize = UDim2.new(0, 0, 0, count * 26)
end

-- Update listFolderItems to support Model as expandable
local function listFolderItems(folderOrModel, indent)
    for _, item in ipairs(folderOrModel:GetChildren()) do
        if item.ClassName == "Folder" or item.ClassName == "Model" then
            if collapseState[item] == nil then
                collapseState[item] = true
            end
            local collapsed = collapseState[item]
            createRow(scroll, item.Name .. " (" .. item.ClassName .. ")", indent, true, collapsed, function()
                collapseState[item] = not collapsed
                listItems()
            end)
            if not collapsed then
                listFolderItems(item, indent + 1)
            end
        else
            createRow(scroll, item.Name .. " (" .. item.ClassName .. ")", indent, false)
        end
    end
end

listItems()

local refresh = Instance.new("TextButton")
refresh.Parent = listFrame
refresh.Size = UDim2.new(0.2, 0, 0.08, 0)
refresh.Position = UDim2.new(0.78, 0, 0.01, 0)
refresh.Text = "Refresh"
refresh.Font = Enum.Font.SourceSansBold
refresh.TextSize = 16
refresh.TextColor3 = Color3.new(1, 1, 1)
refresh.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
refresh.MouseButton1Click:Connect(listItems)
